[tool.isort]
profile = "black"
filter_files = true
force_single_line = true

[tool.flake8]
max-line-length = 100
require-plugins = [
    # https://github.com/DmytroLitvinov/awesome-flake8-extensions

    ### Bugs & Code-Smells
    "flake8-bugbear",
    "flake8-secure-coding-standard",
    "flake8-bandit",
    "flake8-builtins",

    ### Clean Code
    "flake8-comprehensions",
    "flake8-simplify",
    "flake8-eradicate",
    "flake8-commas",

    ### Limitations
    "flake8-blind-except",
    "flake8-logging-format",
    "flake8-print",

    ### Documentation
    "flake8-comments",
    # flake8-docstrings
    # flake8-rst-docstrings

    ### Test-Improvements
    "flake8-assertive",
]

extend-ignore = [
    # black-formatter-specific
    "E203",
    # open() vs os.open()
    "SCS109",
    # hideous commas
    "C812",
    "C815",
    "C813",
    # DOCString TODO: reduce here
    "D100",
    "D102",
    "D103",
]


count = true
statistics = true

[tool.ruff]  # TODO: once stable it replaces flake8, pyupgrade, isort, â€¦
line-length = 100
select = [
    "A",
    "ARG",
    "B",
    "C",
    "C4",
    "E",
    "ERA",
    "F",
#    "I",  # incomplete isort
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RET",
    "S",
    "T10",
    "UP",
    "W",  # TODO: just a proposed starting-config
]
ignore = ["A003"]
target-version = "py38"

[tool.ruff.per-file-ignores]
#"__init__.py" = ["F401"]
#"tests/**" = ["ARG", "S"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
